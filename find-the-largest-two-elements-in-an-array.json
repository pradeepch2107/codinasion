{
  "slug": "find-the-largest-two-elements-in-an-array",
  "title": "Find The Largest Two Elements In An Array",
  "c": "#include<stdio.h>\nvoid FindLargestTwoElements(int arr[],int size){\n\n    int firstMax, secondMax;\n\n    if (size < 2) {\n        printf(\"Array size should be at least 2 to find two largest elements.\\n\");\n        return;\n    }\n\n    if (arr[0] > arr[1]) {\n        firstMax = arr[0];\n        secondMax = arr[1];\n    } else {\n        firstMax = arr[1];\n        secondMax = arr[0];\n    }\n\n    for(int i=0;i<size;i++){\n        if(arr[i]>firstMax){\n            secondMax = firstMax;\n            firstMax = arr[i];\n        }\n        else if(arr[i]>secondMax && arr[i]!=firstMax){\n            secondMax = arr[i];\n        }\n    }\n    printf(\"The largest two elements are %d and %d\\n\", firstMax, secondMax);\n}\n\nint main()\n{\n    int arr1[] = {12, 13, 1, 10, 34, 1};\n     int size1 = sizeof(arr1)/sizeof(arr1[0]);\n    FindLargestTwoElements(arr1,size1);\n\n    int arr2[] = {10, 5, 10};\n     int size2 = sizeof(arr2)/sizeof(arr2[0]);\n    FindLargestTwoElements(arr2,size2);\n\n    int arr3[] = {10, 10, 10};\n     int size3 = sizeof(arr3)/sizeof(arr3[0]);\n    FindLargestTwoElements(arr3,size3);\n \n    return 0;\n}\n",
  "c-plus-plus": "#include <iostream>\n#include <climits>\n\nvoid findLargestTwo(int arr[], int size) {\n    if (size < 2) {\n        std::cout << \"Array size should be at least 2.\" << std::endl;\n        return;\n    }\n\n    int firstLargest = INT_MIN;\n    int secondLargest = INT_MIN;\n\n    for (int i = 0; i < size; ++i) {\n        if (arr[i] > firstLargest) {\n            secondLargest = firstLargest;\n            firstLargest = arr[i];\n        } else if (arr[i] > secondLargest && arr[i] != firstLargest) {\n            secondLargest = arr[i];\n        }\n    }\n\n    if (secondLargest == INT_MIN) {\n        std::cout << \"There are not enough distinct elements in the array.\" << std::endl;\n    } else {\n        std::cout << \"The largest two elements are \" << firstLargest << \" and \" << secondLargest << std::endl;\n    }\n}\n\nint main() {\n    int size;\n\n    std::cout << \"Enter the size of the array: \";\n    std::cin >> size;\n\n    if (size <= 0) {\n        std::cout << \"Invalid array size.\" << std::endl;\n        return 1;\n    }\n\n    int arr[size];\n\n    std::cout << \"Enter the elements of the array: \";\n    for (int i = 0; i < size; ++i) {\n        std::cin >> arr[i];\n    }\n\n    findLargestTwo(arr, size);\n\n    return 0;\n}\n",
  "c-sharp": "using System;\n\nclass Program\n{\n    static void FindLargestTwoElements(int[] arr)\n    {\n        int firstLargest = int.MinValue;\n        int secondLargest = int.MinValue;\n\n        foreach (int num in arr)\n        {\n            if (num > firstLargest)\n            {\n                secondLargest = firstLargest;\n                firstLargest = num;\n            }\n            else if (num > secondLargest && num != firstLargest)\n            {\n                secondLargest = num;\n            }\n        }\n\n        if (secondLargest == int.MinValue)\n        {\n            Console.WriteLine(\"Array has less than two distinct elements.\");\n        }\n        else\n        {\n            Console.WriteLine($\"The largest two elements are {firstLargest} and {secondLargest}\");\n        }\n    }\n\n    static void Main()\n    {\n        int[] arr1 = { 12, 13, 1, 10, 34, 1 };\n        FindLargestTwoElements(arr1);\n\n        int[] arr2 = { 10, 5, 10 };\n        FindLargestTwoElements(arr2);\n\n        int[] arr3 = { 10, 10, 10 };\n        FindLargestTwoElements(arr3);\n    }\n}\n",
  "javascript": "function findLargestTwoElements(arr) {\n    if (arr.length < 2) {\n      console.log(\"Array should have at least two elements.\");\n      return;\n    }\n  \n    // Sort the array in descending order\n    arr.sort(function(a, b) {\n      return b - a;\n    });\n  \n    // Extract the first and second elements (largest and second largest)\n    let largest = arr[0];\n    let secondLargest = arr[1];\n  \n    return [largest, secondLargest];\n  }\n\n    // Example usage\n    let numbers = [10, 5, 8, 20, 15];\n    let result = findLargestTwoElements(numbers);\n\n    let letters = ['f', 'o', 'p', 'w', 'z'];\n    let result = findLargestTwoElements(letters);\n    \n    console.log(\"Largest two numbers:\", result);",
  "kotlin": "fun main() {\n    val twoLargestElements = twoLargestElements(arrayOf(12, 13, 1, 10, 34, 1))\n    println(twoLargestElements.joinToString())\n}\n\nfun twoLargestElements(array: Array<Int>): Array<Int> {\n    return if (array.size < 2) {\n        emptyArray()\n    } else {\n        val sortedArray = array.sortedArrayDescending()\n        sortedArray.sliceArray(0..1)\n    }\n}\n",
  "typescript": "function findTheLargestTwoElementsInAnArray (arr: number[]) { \n  if (arr.length < 2) {\n    throw new Error('The length of the array must be at least 2.');\n  }\n\n  const max1 = Math.max(...arr);\n  const filteredNumbers = arr.filter(num => num !== max1);\n  const max2 = Math.max(...filteredNumbers);\n  \n  return { max1, max2 };\n};\n\nconst list = [12, 13, 1, 10, 34, 1];\nconst { max1, max2 } = findTheLargestTwoElementsInAnArray(list);\n\nconsole.log(`The largest two elements are ${max1} and ${max2}`)",
  "description": "\n## Write a program to find the largest two elements in an array\n\n```text\r\nInput: arr[] = {12, 13, 1, 10, 34, 1}\r\nOutput: The largest two elements are 34 and 13\r\n\r\nInput: arr[] = {10, 5, 10}\r\nOutput: The largest two elements are 10 and 5\r\n\r\nInput: arr[] = {10, 10, 10}\r\nOutput: The largest two elements are 10 and 10\r\n```\n\n---\n",
  "trackId": 5033,
  "lastUpdated": "2024-01-23T13:03:57Z",
  "contributors": [
    "MohitKambli",
    "bharathbarma94",
    "chintanrupareliya",
    "joenjogu",
    "harshraj8843",
    "Amedi-Imbira",
    "kkiriky",
    "hamzambo"
  ],
  "dart": "import 'dart:io';\n\nvoid findLargestTwo(List<int> arr) {\n  if (arr.length < 2) {\n    print(\"Array should have at least two elements.\");\n    return;\n  }\n\n  int largest = (arr[0] > arr[1]) ? arr[0] : arr[1];\n  int secondLargest = (arr[0] > arr[1]) ? arr[1] : arr[0];\n\n  for (int i = 2; i < arr.length; i++) {\n    if (arr[i] > largest) {\n      secondLargest = largest;\n      largest = arr[i];\n    } else if (arr[i] > secondLargest) {\n      secondLargest = arr[i];\n    }\n  }\n\n  print(\"Largest two elements in the array: $largest $secondLargest\");\n}\n\nvoid main() {\n  print(\"Enter integers for the array separated by space:\");\n  String input = stdin.readLineSync() ?? '';\n  List<int> array = input.split(' ').map((e) => int.tryParse(e) ?? 0).toList();\n\n  findLargestTwo(array);\n}\n\n\n/*\n\nCommand Prompt Execution:\ndart find_the_largest_two_elements_in_an_array.dart\nEnter integers for the array separated by space:\n10 11 9 1 20 3\nLargest two elements in the array: 20 11\n\n*/\n",
  "php": "<?php\n\nfunction findLargestTwo($arr, $size) {\n    if ($size < 2) {\n        echo \"Array size should be at least 2.\\n\";\n        return;\n    }\n\n    $firstLargest = PHP_INT_MIN;\n    $secondLargest = PHP_INT_MIN;\n\n    for ($i = 0; $i < $size; ++$i) {\n        if ($arr[$i] > $firstLargest) {\n            \n            $secondLargest = $firstLargest;\n            $firstLargest = $arr[$i];\n        } elseif ($arr[$i] > $secondLargest && $arr[$i] != $firstLargest) {\n          \n            $secondLargest = $arr[$i];\n        }\n    }\n\n    if ($secondLargest == PHP_INT_MIN) {\n        echo \"There are not enough distinct elements in the array.\\n\";\n    } else {\n        echo \"The largest two elements are $firstLargest and $secondLargest\\n\";\n    }\n}\n\n\necho \"Enter the size of the array: \";\n$size = intval(readline());\n\nif ($size <= 0) {\n    echo \"Invalid array size.\\n\";\n    exit(1);\n}\n\necho \"Enter the elements of the array (space-separated): \";\n$input = trim(readline());\n$arr = array_map('intval', explode(' ', $input));\n\nfindLargestTwo($arr, $size);\n\n?>\n",
  "python": "def main():\n      \"\"\"\n            Return the two largest elements from a nonempty Python list (array)\n            1. Sort the array\n            2. Return the last two elements from the sorted array\n            \n            Asymptotic analysis\n            By sorting the sequence of the elements, elements will be placed next to each other. Therefore\n            1. built in function sorted guarantees a worst case running time of O(n log n)\n            2. return tuple assignment is in constant time O(1)\n            \n      \"\"\"\n      seq = [12, 13, 1, 10, 34, 35]                                                # Test with various sequences\n      \n      largest, second_largest = find_two_largest_elements(seq)                      #unpacking tuple\n      print(f'Largest: {largest} || Second largest: {second_largest}')\n\ndef find_two_largest_elements(S):\n      S_sorted = sorted(S)\n      \n      return (S_sorted[-2], S_sorted[-1])                                       # Return in tuple form\n\nif __name__ == '__main__':\n      main()",
  "languages": [
    "c",
    "c-plus-plus",
    "c-sharp",
    "javascript",
    "kotlin",
    "typescript",
    "dart",
    "php",
    "python"
  ]
}