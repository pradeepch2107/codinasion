{
  "slug": "implement-selection-sort",
  "title": "Implement Selection Sort",
  "c": "#include <stdio.h>\n\n// Function declarations\nvoid swap(int *x, int *y);\nvoid selectionSort(int arr[], size_t n);\nvoid printArray(const int arr[], size_t size);\n\nint main() {\n    // Sample array to be sorted\n    int arr[] = {8, 5, 2, 6, 9, 3, 1, 4, 0, 7};\n    size_t n = sizeof(arr) / sizeof(arr[0]);\n\n    // Sorting the array using the selection sort algorithm\n    selectionSort(arr, n);\n\n    // Displaying the sorted array\n    printf(\"Sorted array: \\n\");\n    printArray(arr, n);\n\n    return 0;\n}\n\n// Function to swap two integers\nvoid swap(int *x, int *y) {\n    int temp = *x;\n    *x = *y;\n    *y = temp;\n}\n\n// Function to perform selection sort on an array\nvoid selectionSort(int arr[], size_t n) {\n    // Traverse through all array elements\n    for (size_t i = 0; i < n; i++) {\n        // set current element as minimum\n        size_t min_index = i;\n\n        // Compare with the rest of the elements\n        for (size_t j = i + 1; j < n; j++) {\n            if (arr[j] < arr[min_index]) {\n                min_index = j;\n            }\n        }\n\n        // Swap the found minimum element with the current element\n        if (min_index != i) {\n            swap(&arr[min_index], &arr[i]);\n        }\n    }\n}\n\n// Function to print elements of an array\nvoid printArray(const int arr[], size_t size) {\n    for (size_t i = 0; i < size; i++) {\n        printf(\"%d \", arr[i]);\n    }\n    printf(\"\\n\");\n}\n",
  "java": "public class SelectionSort {\r\n    \r\n    public static void main(String[] args) {\r\n        int[] sortedArray = selectionSort([8, 5, 2, 6, 9, 3, 1, 4, 0, 7]);\r\n        printArray(sortedArray);\r\n    }\r\n\r\n    public static int[] selectionSort(int[] list) {\r\n        for (int i = 0; i < list.length - 1; i++) {\r\n            int minInd = i;\r\n\r\n            for (int j = i + 1; j < list.length; j++) {\r\n                if (arr[j] < arr[minInd]) {\r\n                    minInd = j;\r\n                }\r\n            }\r\n\r\n            if (minInd != i) {\r\n                int temp = arr[i];\r\n                arr[i] = arr[minInd];\r\n                arr[minInd] = temp;\r\n            }\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    public static void printArray(int[] arr) {\r\n        for (int value : arr) {\r\n            System.out.print(value + \" \");\r\n        }\r\n        System.out.println();\r\n    }\r\n}",
  "description": "\n## Write a program to implement selection sort\n\nSelection sort is a sorting algorithm that selects the smallest element from an unsorted list in each iteration and places that element at the beginning of the unsorted list.\r\n\r\n### Pseudocode\r\n\r\n```\r\nprocedure selection sort \r\n   list  : array of items\r\n   n     : size of list\r\n\r\n   for i = 1 to n - 1\r\n   /* set current element as minimum*/\r\n      min = i    \r\n   \r\n      /* check the element to be minimum */\r\n\r\n      for j = i+1 to n \r\n         if list[j] < list[min] then\r\n            min = j;\r\n         end if\r\n      end for\r\n\r\n      /* swap the minimum element with the current element*/\r\n      if indexMin != i  then\r\n         swap list[min] and list[i]\r\n      end if\r\n   end for\r\n    \r\nend procedure\r\n```\r\n\r\n### Example\r\n\r\n```text\r\nInput  : [8, 5, 2, 6, 9, 3, 1, 4, 0, 7]\r\nOutput : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n```\n\n---\n",
  "trackId": 5327,
  "lastUpdated": "2024-01-21T13:23:23Z",
  "contributors": [
    "MohitKambli",
    "bharathbarma94",
    "SapirKro",
    "ExileAS",
    "Shivamk034",
    "Amedi-Imbira",
    "harshraj8843"
  ],
  "dart": "import 'dart:io';\n\nvoid selectionSort(List<int> list) {\n  int n = list.length;\n\n  for (int i = 0; i < n - 1; i++) {\n    int min = i;\n    for (int j = i + 1; j < n; j++) {\n      if (list[j] < list[min]) {\n        min = j;\n      }\n    }\n    if (min != i) {\n      int temp = list[min];\n      list[min] = list[i];\n      list[i] = temp;\n    }\n  }\n}\n\nvoid main() {\n  print(\"Enter the integers separated by space:\");\n  String input = stdin.readLineSync() ?? '';\n  List<int> inputList = input.split(' ').map((e) => int.tryParse(e) ?? 0).toList();\n  print(\"Input List: $inputList\");\n  selectionSort(inputList);\n  print(\"Sorted List: $inputList\");\n}\n\n/*\n\nCommand Prompt Execution:\ndart implement_selection_sort.dart\nEnter the integers separated by space:\n9 4 10 1 5 2\nInput List: [9, 4, 10, 1, 5, 2]\nSorted List: [1, 2, 4, 5, 9, 10]\n\n*/\n",
  "php": "<?php\n\nfunction selectionSort(&$arr) {\n    $n = count($arr);\n\n    for ($i = 0; $i < $n - 1; $i++) {\n        $min = $i;\n\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($arr[$j] < $arr[$min]) {\n                $min = $j;\n            }\n        }\n\n        // Swap the minimum element with the current element\n        if ($min != $i) {\n            $temp = $arr[$min];\n            $arr[$min] = $arr[$i];\n            $arr[$i] = $temp;\n        }\n    }\n}\n\n// Example usage:\n$inputArray = [8, 5, 2, 6, 9, 3, 1, 4, 0, 7];\n\necho \"Input Array: [\" . implode(\", \", $inputArray) . \"]\\n\";\n\nselectionSort($inputArray);\n\necho \"Sorted Array: [\" . implode(\", \", $inputArray) . \"]\\n\";\n\n?>",
  "python": "def main() -> None:\n      pass\n\ndef selection_sort(collection: list[int]) -> list[int]:\n      \n      \"\"\"\n      Sorts a list in ascending order using the selection sort algorithm.\n\n      :param collection: A list of integers to be sorted.\n      :return: The sorted list.\n\n      Examples:\n      selection_sort([0, 5, 3, 2, 2])\n      [0, 2, 2, 3, 5]\n      \"\"\"\n    \n      length = len(collection)\n      for i in range(length-1):\n            min_index = i\n            for k in range(i+1, length):\n                  if collection[k] < collection[min_index]:\n                        min_index = k\n            if min_index != i:\n                  collection[i], collection[min_index] = collection[min_index], collection[i]\n      return collection\n\nif __name__ == '__main__':\n      user_input = input(\"Enter numbers separated by a comma:\\n\").strip()\n      unsorted = [int(item) for item in user_input.split(\",\")]\n      sorted_list = selection_sort(unsorted)\n      print(\"Sorted List:\", sorted_list)\n                      \n            \n\n",
  "rust": "use std::io;\n\nfn selection_sort(arr: &mut Vec<i32>) {\n    let n = arr.len();\n\n    for i in 0..n {\n        let mut min_index = i;\n\n        for j in i + 1..n {\n            if arr[j] < arr[min_index] {\n                min_index = j;\n            }\n        }\n\n        if min_index != i {\n            arr.swap(i, min_index);\n        }\n    }\n}\n\nfn main() {\n    // Take user input for the array\n    let mut numbers = Vec::new();\n    println!(\"Enter numbers separated by spaces:\");\n\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).expect(\"Failed to read line\");\n\n    for num in input.trim().split_whitespace() {\n        if let Ok(n) = num.parse::<i32>() {\n            numbers.push(n);\n        }\n    }\n\n    println!(\"Original array: {:?}\", numbers);\n\n    selection_sort(&mut numbers);\n\n    println!(\"Sorted array: {:?}\", numbers);\n}\n",
  "languages": [
    "c",
    "java",
    "dart",
    "php",
    "python",
    "rust"
  ]
}